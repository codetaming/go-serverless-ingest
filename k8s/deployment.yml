apiVersion: v1
kind: Namespace
metadata:
  name: go
  labels:
    name: go
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ingest
  namespace: go
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: ingest
        env: development
    spec:
      containers:
      - name: ingest
        image: codetaming/ingest-arm
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: ingest-svc
  namespace: go
spec:
  selector:
    app: ingest
  ports:
  - port: 80
    targetPort: 9000
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingest-ingress
  namespace: go
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: go.k8s.codetaming.org
    http:
      paths:
      - path: /
        backend:
          serviceName: ingest-svc
          servicePort: 80
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        args:
        - --api
        - --kubernetes
        - --logLevel=INFO
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
  externalIPs:
    - 10.1.1.200
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: k8s.codetaming.org
    http:
      paths:
      - backend:
          serviceName: traefik-web-ui
          servicePort: 80
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
